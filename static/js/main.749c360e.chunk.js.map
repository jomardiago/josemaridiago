{"version":3,"sources":["components/CommandsList.js","components/InfoLine.js","components/InputCommand.js","components/PersonalInfo.js","components/InvalidCommand.js","components/Skills.js","components/Connect.js","App.js","reportWebVitals.js","index.js"],"names":["CommandsList","className","InfoLine","basic","InputCommand","handleKeyCommand","type","name","placeholder","autoFocus","onKeyDown","PersonalInfo","InvalidCommand","Skills","Connect","KEY_COMMANDS","App","commandsEndRef","React","useRef","useState","commands","setCommands","useEffect","current","scrollIntoView","behavior","scrollToBottom","length","map","command","value","id","e","key","includes","target","uuidv4","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.749c360e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction CommandsList() {\r\n    return (\r\n        <div>\r\n            <p className=\"m-0\"><span className=\"yellow-text\">jad --info</span> : Shows my personal information I guess?</p>\r\n            <p className=\"m-0\"><span className=\"yellow-text\">jad --stack</span> : A day in a life of my technolgy stack.</p>\r\n            <p className=\"m-0\"><span className=\"yellow-text\">jad --connect</span> : I don't know, maybe connect with me?</p>\r\n            <p className=\"m-0\"><span className=\"yellow-text\">jad --clear</span> : Clear all the commands you have type.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommandsList;","import React from 'react';\r\nimport CommandsList from './CommandsList';\r\n\r\nfunction InfoLine({ basic }) {\r\n    return (\r\n        <>\r\n            <p>\r\n                <span className=\"green-text\">JAD@FULLSTACK-DOB916</span> \r\n                <span className=\"pink-text\"> MINGW64</span> \r\n                <span className=\"yellow-text\"> /c/manila/sta-mesa/josemaridiago</span>\r\n                <span className=\"blue-text\"> (master)</span>\r\n            </p>\r\n            {\r\n                !basic && (\r\n                    <>\r\n                        <p>\r\n                            $ <span>jad --help</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>Showing available commands. Just type <span className=\"green-text\">'jad --{'{command}'}'</span> to run the command. I.E. <span className=\"yellow-text\">jad --info</span></span>\r\n                        </p>\r\n                        <CommandsList />\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InfoLine;","import React from 'react';\r\n\r\nfunction InputCommand({ handleKeyCommand }) {\r\n    return (\r\n        <p>\r\n            $ <input type=\"text\" name=\"command\" placeholder=\"hey, type here...\" className=\"command-input\" autoFocus onKeyDown={handleKeyCommand} />\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default InputCommand;","import React from 'react';\r\n\r\nfunction PersonalInfo() {\r\n    return (\r\n        <div>\r\n            <p className=\"m-0\">\r\n                <span className=\"green-text\">Name: </span> <span>Jose Mari A. Diago</span>\r\n            </p>\r\n            <p className=\"m-0\">\r\n                <span className=\"green-text\">Date of Birth: </span> <span>September 16, 19** :)</span>\r\n            </p>\r\n            <p className=\"m-0\">\r\n                <span className=\"green-text\">Bio: </span> \r\n                <span>\r\n                    <span className=\"yellow-text\">Full Stack Developer</span> since 2011. A <span className=\"yellow-text\">husband</span>. A <span className=\"green-text\">father.</span> Oh! I have a lazy <span className=\"pink-text\">dog</span>.\r\n                </span>\r\n            </p>\r\n            <p className=\"m-0\">\r\n                <span className=\"green-text\">College: </span> \r\n                <span>\r\n                    Polytechnic University of the Philippines\r\n                </span>\r\n            </p>\r\n            <div className=\"m-0\">\r\n                <span className=\"green-text\">Work Experience:</span>\r\n                <ul>\r\n                    <li>Computer Professionals Inc. [2011 - present]</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalInfo;","import React from 'react';\r\nimport CommandsList from './CommandsList';\r\n\r\nfunction InvalidCommand() {\r\n    return (\r\n        <div>\r\n            <p className=\"red-text\">You may have accidentally entered an invalid command. No worries, please see commands below.</p>\r\n            <CommandsList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InvalidCommand;","import React from 'react';\r\n\r\nfunction Skills() {\r\n    return (\r\n        <div>\r\n            <p className=\"m-0\">\r\n                <span className=\"green-text\">\r\n                    Frontend:\r\n                </span>\r\n                <ul>\r\n                    <li>HTML <span className=\"red-text\">&</span> CSS</li>\r\n                    <li><span className=\"yellow-text\">Javascript</span></li>\r\n                    <li>React<span className=\"red-text\">JS</span></li>\r\n                    <li><span className=\"red-text\">Apollo</span> Client</li>\r\n                    <li><span className=\"red-text\">Styled</span> Components</li>\r\n                    <li><span className=\"red-text\">Chakra</span> UI</li>\r\n                    <li><span className=\"red-text\">Carbon</span> Components</li>\r\n                    <li>Micro Frontends</li>\r\n                </ul>\r\n            </p>\r\n            <p className=\"m-0\">\r\n                <span className=\"green-text\">\r\n                    Backend:\r\n                </span>\r\n                <ul>\r\n                    <li><span className=\"yellow-text\">Javascript</span></li>\r\n                    <li>Node<span className=\"red-text\">JS</span></li>\r\n                    <li>Express</li>\r\n                    <li><span className=\"red-text\">Graph</span>QL</li>\r\n                    <li><span className=\"red-text\">Couch</span>DB</li>\r\n                    <li><span className=\"red-text\">Mongo</span>DB</li>\r\n                    <li><span className=\"red-text\">Apollo</span> Server</li>\r\n                </ul>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\n\r\nfunction Connect() {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li><span className=\"green-text\">Gmail: </span> jomardiago@gmail.com</li>\r\n                <li><span className=\"green-text\">Github: </span> https://github.com/jomardiago</li>\r\n                <li><span className=\"green-text\">Twitter: </span> https://twitter.com/josemaridiago1</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Connect;","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport InfoLine from './components/InfoLine';\r\nimport InputCommand from './components/InputCommand';\r\nimport PersonalInfo from './components/PersonalInfo';\r\nimport InvalidCommand from './components/InvalidCommand';\r\nimport Skills from './components/Skills';\r\nimport Connect from './components/Connect';\r\nimport './App.css';\r\n\r\nconst KEY_COMMANDS = [\r\n  'jad --info',\r\n  'jad --stack',\r\n  'jad --connect',\r\n  'jad --clear',\r\n];\r\n\r\nfunction App() {\r\n  const commandsEndRef = React.useRef(null);\r\n  const [commands, setCommands] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    scrollToBottom()\r\n  }, [commands]);\r\n\r\n  function handleKeyCommand(e) {\r\n    if (e.key === 'Enter') {\r\n      if (KEY_COMMANDS.includes(e.target.value)) {\r\n        if (e.target.value === 'jad --clear') {\r\n          setCommands([]);\r\n        } else {\r\n          setCommands([\r\n            ...commands,\r\n            { id: uuidv4(), value: e.target.value }\r\n          ]);\r\n        }\r\n      } else {\r\n        setCommands([\r\n          ...commands,\r\n          { id: uuidv4(), value: e.target.value, type: 'invalidCommand' }\r\n        ]);\r\n      }\r\n\r\n      e.target.value = '';\r\n    }\r\n  }\r\n\r\n  function scrollToBottom() {\r\n    commandsEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <InfoLine />\r\n      <InfoLine basic={true} />\r\n      {\r\n        commands.length > 0 && commands.map(command => (\r\n          <div key={command.id}>\r\n            <p>\r\n              {command.value}\r\n            </p>\r\n            { command.value === 'jad --info' && <PersonalInfo /> }\r\n            { command.value === 'jad --stack' && <Skills /> }\r\n            { command.value === 'jad --connect' && <Connect /> }\r\n            { command.type === 'invalidCommand' && <InvalidCommand /> }\r\n            <InfoLine basic={true} />\r\n          </div>\r\n        ))\r\n      }\r\n      <InputCommand handleKeyCommand={handleKeyCommand} />\r\n      <div ref={commandsEndRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}